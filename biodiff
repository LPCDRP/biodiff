#!/bin/sh

set -e

VERSION=0.2.2

reference="$1"
query="$2"


unset tmpdir
tmpdir=$(mktemp -p /tmp -d biodiff.XXXXXX)
refdir="$tmpdir/ref"
qrydir="$tmpdir/qry"


cleanup () {
    rm -rf "$tmpdir"
}

usage () {
    echo "Input error - Please see biodiff(1) for usage instructions."
    exit 1
}

read_fasta () {
    export outdir="$1"
    mkdir "$outdir"
    infile="$2"
    perl -e "$(cat <<'EOF'
open(my $filename, '>', '/dev/null');

while(<>) {
	chomp;
	if ( $_ =~ /^>\s*(\S+)/) {
		close($filename);
		open($filename, '>', "$ENV{'outdir'}/$1");
	} elsif ($_ =~ /^\s*$/) {
		next;
	} else {
		print $filename join("\n", split('', $_))."\n";
	}
}
EOF
    )" "$infile"
}

trap cleanup EXIT

if [ -z "$reference" ] || [ -z "$query" ] || [ -n "$3" ]
then
    usage
fi

# call dnadiff to find location of inversions, in terms of querry and reference position
isolatenpath=${query%.fasta}  # get isolate ID by stripping suffix
isolate=${isolatenpath##*/}   # and stripping path
dnadiff -p $tmpdir/$isolate $reference $query   
inversionfix.py -r $tmpdir/$isolate.rdiff -q $tmpdir/$isolate.qdiff -v $tmpdir/$isolate-temp.vcf -f $query -p $reference -t $tmpdir/$isolate-temp.fasta
# inversionfix.py will need to be made an exacutable in the path eventually

read_fasta "$refdir" $reference
read_fasta "$qrydir" $tmpdir/$isolate-temp.fasta

# If we have one reference and one query, don't require matching identifiers
if [ $(ls "$refdir" | wc -l) = 1 ] && [ $(ls "$qrydir" | wc -l) = 1 ]
then
    qry_id="$(basename "$qrydir/"*)"
    ref_id="$(basename "$refdir/"*)"
    if [ "$qry_id" != "$ref_id" ]
    then
	>&2 echo "Warning: The query ID does not match the reference ID."
	>&2 echo "         comparing them anyway because that's probably what you wanted..."
	>&2 echo "         Query ID: $qry_id"
	>&2 echo "         Reference ID: $ref_id"

	mv "$qrydir/$qry_id" "$qrydir/$ref_id"
    fi
fi

cat <<EOF
##fileformat=VCFv4.2
##source=biodiffV${VERSION}
##INFO=<ID=SVLEN,Number=1,Type=Integer,Description="Length of Structural Variation"
##INFO=<ID=SVTYPE,Number=1,Type=String,Description="Lable of Structural Variation Type. Key: INV=Inversion"
##INFO=<ID=Ambiguity,Number=1,Type=String,Description="Reason for Ambiguous Variant Call. Key: Inside_Inversion=Biodiff assumes this variant occured after the surrounding inversion event however the true phylogeny is uncertain, Near_Inversion=Biodiff still produces erroneous SNP and INDEL calls near the edges of inversions"
#CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO
EOF

diff -irdb -U1 "$refdir" "$qrydir" \
    | udiff2vcf >> $tmpdir/$isolate-temp.vcf  # append output of diff to temp.vcf file, which has the inversion calls

variantfilter.py -i $tmpdir/$isolate-temp.vcf -o $tmpdir/$isolate-temp-filtered.vcf

sort -k2 -n $tmpdir/$isolate-temp-filtered.vcf  # sort by position, and output to stdout
